{"version":3,"sources":["../src/utils.js"],"names":["isFunction","obj","isObject","isPromise","value","then","isBrowser","window","isJSX","jsx"],"mappings":";;;;;;;;;;;;;;AAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG;AAAA,SAAI,eAAe,OAAOA,GAA1B;AAAA,CAAtB;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAD,GAAG;AAAA,SAAIA,GAAG,KAAK,IAAR,IAAgB,yBAAOA,GAAP,MAAe,QAAnC;AAAA,CAApB;AAEP;;;;;;;;AAIO,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,SAAOF,QAAQ,CAACE,KAAD,CAAR,IAAmBJ,UAAU,CAACI,KAAK,CAACC,IAAP,CAApC;AACD;AAED;;;;;AAGO,SAASC,SAAT,GAAqB;AAC1B,SAAO,OAAOC,MAAP,KAAkB,WAAzB;AACD;AAED;;;;;AAGO,SAASC,KAAT,CAAeC,GAAf,EAAoB;AACzB,SAAO,UAAUA,GAAV,IAAiB,SAASA,GAA1B,IAAiC,SAASA,GAAjD;AACD","sourcesContent":["export const isFunction = obj => \"function\" === typeof obj;\n\nexport const isObject = obj => obj !== null && typeof obj === \"object\";\n\n/**\n * is value a promise object\n * @param {*} value\n */\nexport function isPromise(value) {\n  return isObject(value) && isFunction(value.then);\n}\n\n/**\n * judge browser environment\n */\nexport function isBrowser() {\n  return typeof window !== \"undefined\";\n}\n\n/**\n * judge is jsx\n */\nexport function isJSX(jsx) {\n  return \"type\" in jsx && \"key\" in jsx && \"ref\" in jsx;\n}\n"],"file":"utils.js"}