{"version":3,"sources":["../src/render.js"],"names":["render","req","res","routes","document","assets","dynamicAssets","customRenderer","rest","Doc","DefaultDocument","context","path","match","initialProps","status","redirectTo","redirect","originalUrl","replace","renderPage","fn","modPage","dynamicModules","defaultRenderer","element","html","ReactDOMServer","renderToString","renderer","asyncOrSyncRender","url","moduleName","push","Nut","utils","isPromise","renderedContent","helmet","Helmet","renderStatic","reactRouterMatch","getInitialProps","docProps","doc","renderToStaticMarkup","Page","props"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;SAQsBA,M;;;;;;;+BAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,GADK,QACLA,GADK,EAELC,GAFK,QAELA,GAFK,EAGLC,MAHK,QAGLA,MAHK,EAILC,QAJK,QAILA,QAJK,EAKLC,MALK,QAKLA,MALK,EAMLC,aANK,QAMLA,aANK,EAOLC,cAPK,QAOLA,cAPK,EAQFC,IARE;AAUCC,YAAAA,GAVD,GAUOL,QAAQ,IAAIM,gCAVnB;AAWCC,YAAAA,OAXD,GAWW,EAXX;AAAA;AAAA,mBAY+B,wCAAkBR,MAAlB,EAA0BF,GAAG,CAACW,IAA9B;AAClCX,cAAAA,GAAG,EAAHA,GADkC;AAElCC,cAAAA,GAAG,EAAHA;AAFkC,eAG/BM,IAH+B,EAZ/B;;AAAA;AAAA;AAYEK,YAAAA,KAZF,SAYEA,KAZF;AAYSC,YAAAA,YAZT,SAYSA,YAZT;;AAAA,gBAkBAD,KAlBA;AAAA;AAAA;AAAA;;AAmBHX,YAAAA,GAAG,CAACa,MAAJ,CAAY,GAAZ;AAnBG;;AAAA;AAAA,kBAuBDF,KAAK,CAACD,IAAN,KAAe,IAvBd;AAAA;AAAA;AAAA;;AAwBHV,YAAAA,GAAG,CAACa,MAAJ,CAAY,GAAZ;AAxBG;AAAA;;AAAA;AAAA,kBAyBMF,KAAK,IAAIA,KAAK,CAACG,UAAf,IAA6BH,KAAK,CAACD,IAzBzC;AAAA;AAAA;AAAA;;AA0BHV,YAAAA,GAAG,CAACe,QAAJ,CAAc,GAAd,EAAmBhB,GAAG,CAACiB,WAAJ,CAAgBC,OAAhB,CAAyBN,KAAK,CAACD,IAA/B,EAAqCC,KAAK,CAACG,UAA3C,CAAnB;AA1BG;;AAAA;AA8BCI,YAAAA,UA9BD;AAAA;AAAA;AAAA;AAAA;AAAA,2CA8Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,wBAAAA,EAAP,2DAAYC,OAAZ;AACXC,wBAAAA,cADW,GACM,EADN,EAEjB;;AACMC,wBAAAA,eAHW,GAGO,SAAlBA,eAAkB,CAAAC,OAAO;AAAA,iCAAK;AAClCC,4BAAAA,IAAI,EAAEC,mBAAeC,cAAf,CAA+BH,OAA/B;AAD4B,2BAAL;AAAA,yBAHd;;AAMXI,wBAAAA,QANW,GAMAtB,cAAc,IAAIiB,eANlB;AAOXM,wBAAAA,iBAPW,GAOSD,QAAQ,CAChC,gCAAC,4BAAD;AAAc,0BAAA,QAAQ,EAAE5B,GAAG,CAAC8B,GAA5B;AAAiC,0BAAA,OAAO,EAAEpB;AAA1C,2BACE,gCAAC,kBAAD,CAAU,OAAV;AACE,0BAAA,MAAM,EAAE,gBAAAqB,UAAU;AAAA,mCAAIT,cAAc,CAACU,IAAf,CAAqBD,UAArB,CAAJ;AAAA;AADpB,2BAGGX,EAAE,CAAEa,QAAF,CAAF,CAAU;AAAC/B,0BAAAA,MAAM,EAANA,MAAD;AAASW,0BAAAA,YAAY,EAAZA;AAAT,yBAAV,CAHH,CADF,CADgC,CAPjB;;AAAA,6BAiBOqB,KAAK,CAACC,SAAN,CAAiBN,iBAAjB,CAjBP;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAkBPA,iBAlBO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,sCAmBbA,iBAnBa;;AAAA;AAiBXO,wBAAAA,eAjBW;AAoBXC,wBAAAA,MApBW,GAoBFC,wBAAOC,YAAP,EApBE;AAAA;AAsBTF,0BAAAA,MAAM,EAANA;AAtBS,2BAsBED,eAtBF;AAsBmBd,0BAAAA,cAAc,EAAdA;AAtBnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA9Bd;;AAAA,8BA8BCH,UA9BD;AAAA;AAAA;AAAA;;AAuDCqB,YAAAA,gBAvDD,GAuDoB,+BAAWxC,GAAG,CAAC8B,GAAf,EAAoBlB,KAApB,CAvDpB;AAAA;AAAA,mBAyD6BJ,GAAG,CAACiC,eAAJ;AAChCzC,cAAAA,GAAG,EAAHA,GADgC;AAEhCC,cAAAA,GAAG,EAAHA,GAFgC;AAGhCG,cAAAA,MAAM,EAANA,MAHgC;AAIhCC,cAAAA,aAAa,EAAbA,aAJgC;AAKhCc,cAAAA,UAAU,EAAVA,UALgC;AAMhCN,cAAAA,YAAY,EAAZA,YANgC;AAOhCD,cAAAA,KAAK,EAAE4B,gBAPyB;AAQhCH,cAAAA,MAAM,EAAEC,wBAAOC,YAAP;AARwB,eAS7BhC,IAT6B,EAzD7B;;AAAA;AAAA;AAyDEkB,YAAAA,IAzDF,SAyDEA,IAzDF;AAyDWiB,YAAAA,QAzDX;AAqECC,YAAAA,GArED,GAqEOjB,mBAAekB,oBAAf,CAAqC,gCAAC,GAAD,EAASF,QAAT,CAArC,CArEP;AAAA,uEAsEoBC,GAAG,CAACzB,OAAJ,CAAa,4CAAb,EAA2DO,IAA3D,CAtEpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyEP,SAASJ,OAAT,CAAkBwB,IAAlB,EAAwB;AACtB,SAAO,UAAAC,KAAK;AAAA,WAAI,gCAAC,IAAD,EAAUA,KAAV,CAAJ;AAAA,GAAZ;AACD","sourcesContent":["import React from 'react';\nimport {matchPath, StaticRouter} from 'react-router-dom';\nimport {DefaultDocument} from './default-document';\nimport ReactDOMServer from 'react-dom/server';\nimport Helmet from 'react-helmet';\nimport {Nut} from './nut';\nimport * as utils from './utils';\nimport {loadInitialProps} from './load-initial-props';\nimport {Loadable} from './loadable';\n\n/**\n * rendering function on server\n *\n * match route config by req.url and find relative page Component\n * call Component.getInitProps to get page init data, so we can render\n * page to html. render Document Compoent wrapping page's html to html\n * and send it to client\n */\nexport async function render({\n  req,\n  res,\n  routes,\n  document,\n  assets,\n  dynamicAssets,\n  customRenderer,\n  ...rest\n}) {\n  const Doc = document || DefaultDocument;\n  const context = {};\n  const {match, initialProps} = await loadInitialProps (routes, req.path, {\n    req,\n    res,\n    ...rest,\n  });\n\n  if (!match) {\n    res.status (404);\n    return;\n  }\n\n  if (match.path === '**') {\n    res.status (404);\n  } else if (match && match.redirectTo && match.path) {\n    res.redirect (301, req.originalUrl.replace (match.path, match.redirectTo));\n    return;\n  }\n\n  const renderPage = async (fn = modPage) => {\n    const dynamicModules = [];\n    // By default, we keep ReactDOMServer synchronous renderToString function\n    const defaultRenderer = element => ({\n      html: ReactDOMServer.renderToString (element),\n    });\n    const renderer = customRenderer || defaultRenderer;\n    const asyncOrSyncRender = renderer (\n      <StaticRouter location={req.url} context={context}>\n        <Loadable.Capture\n          report={moduleName => dynamicModules.push (moduleName)}\n        >\n          {fn (Nut) ({routes, initialProps})}\n        </Loadable.Capture>\n      </StaticRouter>\n    );\n\n    const renderedContent = utils.isPromise (asyncOrSyncRender)\n      ? await asyncOrSyncRender\n      : asyncOrSyncRender;\n    const helmet = Helmet.renderStatic ();\n\n    return {helmet, ...renderedContent, dynamicModules};\n  };\n\n  const reactRouterMatch = matchPath (req.url, match);\n\n  const {html, ...docProps} = await Doc.getInitialProps ({\n    req,\n    res,\n    assets,\n    dynamicAssets,\n    renderPage,\n    initialProps,\n    match: reactRouterMatch,\n    helmet: Helmet.renderStatic (),\n    ...rest,\n  });\n\n  const doc = ReactDOMServer.renderToStaticMarkup (<Doc {...docProps} />);\n  return `<!doctype html>${doc.replace ('DO_NOT_DELETE_THIS_YOU_WILL_BREAK_YOUR_APP', html)}`;\n}\n\nfunction modPage (Page) {\n  return props => <Page {...props} />;\n}\n"],"file":"render.js"}