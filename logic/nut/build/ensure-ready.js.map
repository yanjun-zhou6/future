{"version":3,"sources":["../src/ensure-ready.js"],"names":["ensureReady","pathname","Loadable","preloadReady","window","undefined","document","data","eval","getElementById","textContent","Promise","resolve"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;;;SAIsBA,W;;;;;;;+BAAf,iBAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCC,mBAASC,YAAT,EADD;;AAAA;AAIL,gBAAI,QAAOC,MAAP,0DAAOA,MAAP,OAAkBC,SAAlB,IAA+B,CAAC,CAACC,QAArC,EAA+C;AAC7C;AACAC,cAAAA,IAAI,GAAGC,IAAI,YACLF,QAAQ,CAACG,cAAT,CAAyB,kBAAzB,EAA6CC,WADxC,OAAX;AAGD;;AATI,6CAUEC,OAAO,CAACC,OAAR,CAAiBL,IAAjB,CAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {Loadable} from './loadable';\n\n/**\n * This help us to get initial app state data,\n * and ensure async page component is loaded before rendering\n */\nexport async function ensureReady (pathname) {\n  await Loadable.preloadReady ();\n\n  let data;\n  if (typeof window !== undefined && !!document) {\n    // deserialize state from 'serialize-javascript' format\n    data = eval (\n      `(${document.getElementById ('server-app-state').textContent})`\n    );\n  }\n  return Promise.resolve (data);\n}\n"],"file":"ensure-ready.js"}