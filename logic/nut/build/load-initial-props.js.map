{"version":3,"sources":["../src/load-initial-props.js"],"names":["resolve","obj","__esModule","loadInitialProps","routes","path","ctx","initialPropsPromises","isMatchedComponent","find","route","match","component","getInitialProps","load","push","then","Promise","all","initialProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA,SAASA,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAG,WAA3B,GAAsCA,GAA7C;AACD;AAED;;;;;;;;SAMsBE,gB;;;;;;;+BAAf,iBAAiCC,MAAjC,EAAyCC,IAAzC,EAA+CC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,oBADD,GACwB,EADxB;AAGCC,YAAAA,kBAHD,GAGsBJ,MAAM,CAACK,IAAP,CAAa,UAAAC,KAAK,EAAI;AAC/C,kBAAMC,KAAK,GAAG,+BAAWN,IAAX,EAAiBK,KAAjB,CAAd,CAD+C,CAE/C;;AACA,kBACEC,KAAK,IACLD,KAAK,CAACE,SADN,KAECF,KAAK,CAACE,SAAN,CAAgBC,eAAhB,IAAmCH,KAAK,CAACE,SAAN,CAAgBE,IAFpD,CADF,EAIE;AACA,oBAAMF,SAAS,GAAGF,KAAK,CAACE,SAAxB;AACAL,gBAAAA,oBAAoB,CAACQ,IAArB,CACEH,SAAS,CAACE,IAAV,GACIF,SAAS,CAACE,IAAV,GAAkBE,IAAlB,CAAwB,UAAAJ,SAAS,EAAI;AAAA,iCACTZ,OAAO,CAAEY,SAAF,CADE;AAAA,sBAC5BC,eAD4B,YAC5BA,eAD4B;;AAEnC,yBAAOA,eAAe,GAAGA,eAAe;AAAGF,oBAAAA,KAAK,EAALA;AAAH,qBAAaL,GAAb,EAAlB,GAAuC,EAA7D;AACD,iBAHD,CADJ,GAKIM,SAAS,CAACC,eAAV;AAA4BF,kBAAAA,KAAK,EAALA;AAA5B,mBAAsCL,GAAtC,EANN;AAQD;;AAED,qBAAO,CAAC,CAACK,KAAT;AACD,aApB0B,CAHtB;AAAA,0BA0BIH,kBA1BJ;AAAA;AAAA,mBA2BkBS,OAAO,CAACC,GAAR,CAAaX,oBAAb,CA3BlB;;AAAA;AAAA,wCA2BsD,CA3BtD;AAAA;AA0BHI,cAAAA,KA1BG;AA2BHQ,cAAAA,YA3BG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {matchPath} from 'react-router-dom';\n\nfunction resolve (obj) {\n  return obj && obj.__esModule ? obj.default : obj;\n}\n\n/**\n * load page init props\n * @param {*} routes routes config\n * @param {*} path req path\n * @param {*} ctx the context passing to page getInitialProps function as param\n */\nexport async function loadInitialProps (routes, path, ctx) {\n  const initialPropsPromises = [];\n\n  const isMatchedComponent = routes.find (route => {\n    const match = matchPath (path, route);\n    //if matched, judge compoent and getInitialProps is existed\n    if (\n      match &&\n      route.component &&\n      (route.component.getInitialProps || route.component.load)\n    ) {\n      const component = route.component;\n      initialPropsPromises.push (\n        component.load\n          ? component.load ().then (component => {\n              const {getInitialProps} = resolve (component);\n              return getInitialProps ? getInitialProps ({match, ...ctx}) : {};\n            })\n          : component.getInitialProps ({match, ...ctx})\n      );\n    }\n\n    return !!match;\n  });\n\n  return {\n    match: isMatchedComponent,\n    initialProps: (await Promise.all (initialPropsPromises))[0],\n  };\n}\n"],"file":"load-initial-props.js"}