{"version":3,"sources":["../src/model.js"],"names":["asyncActionFactry","Symbol","Model","asyncFunc","namespace","that","passArgument","Array","prototype","slice","call","arguments","dispatch","getState","customDispatch","action","type","test","apply","reducers","actions","normalActions","Object","keys","reduce","lastActions","reducerName","payload","asyncActions","actionName","source","target","state","tState","tActions","tReducers","tOthers","clazz","instance","createActions"],"mappings":"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","sourcesContent":["/**\r\n * Model base class\r\n */\r\nconst asyncActionFactry = Symbol(\"asyncActionFactry\");\r\n\r\nexport class Model {\r\n  static getInstance = function(clazz) {\r\n    const instance = new clazz();\r\n    instance.createActions();\r\n    return instance;\r\n  };\r\n\r\n  static merge(source, target) {\r\n    const { state, actions, reducers } = source;\r\n    const {\r\n      state: tState,\r\n      actions: tActions,\r\n      reducers: tReducers,\r\n      namespace,\r\n      ...tOthers\r\n    } = target;\r\n    return {\r\n      ...source,\r\n      state: {\r\n        ...state,\r\n        ...tState\r\n      },\r\n      actions: {\r\n        ...actions,\r\n        ...tActions\r\n      },\r\n      reducers: {\r\n        ...reducers,\r\n        ...tReducers\r\n      },\r\n      ...tOthers\r\n    };\r\n  }\r\n\r\n  [asyncActionFactry](asyncFunc, namespace) {\r\n    const that = this;\r\n    return function() {\r\n      const passArgument = Array.prototype.slice.call(arguments);\r\n      return function(dispatch, getState) {\r\n        const customDispatch = action => {\r\n          let { type } = action;\r\n          type = /\\//.test(type) ? type : `${namespace}/${action.type}`;\r\n          dispatch({\r\n            ...action,\r\n            type\r\n          });\r\n        };\r\n        that.dispatch = customDispatch;\r\n        that.getState = getState;\r\n        return asyncFunc.apply(that, [...passArgument]);\r\n      };\r\n    };\r\n  }\r\n\r\n  createActions() {\r\n    const { reducers = {}, namespace = \"app\", actions = {} } = this;\r\n    const normalActions = {};\r\n    Object.keys(reducers).reduce((lastActions, reducerName) => {\r\n      lastActions[reducerName] = function() {\r\n        return {\r\n          type: `${namespace}/${reducerName}`,\r\n          payload: arguments[0]\r\n        };\r\n      };\r\n      return lastActions;\r\n    }, normalActions);\r\n\r\n    const asyncActions = {};\r\n    Object.keys(actions).reduce((lastActions, actionName) => {\r\n      lastActions[actionName] = this[asyncActionFactry](\r\n        actions[actionName],\r\n        namespace\r\n      );\r\n      return lastActions;\r\n    }, asyncActions);\r\n\r\n    this.actions = { ...normalActions, ...asyncActions };\r\n  }\r\n}\r\n"],"file":"model.js"}